@{
    ViewData["Title"] = "Home Page";
}
@{
    List<string> options = ViewData.Model;
    string[] ports = (string [])ViewData["ports"];
}
<div>
    @foreach(string item in options) {
        string[] allInputs = item.Split(";");
        <form id=@allInputs[0]  method="post">
            <p>@allInputs[2]</p>
                  <select>
                @for(int port = 0; port < ports.Length; port++)
                {
                     <option value="@ports[port]">@ports[port]</option>
                }
        </select>
        <input type="hidden" value="@allInputs[3]">
                @for(int input = 4; input < allInputs.Length; input++) {
                    if(allInputs[input].Length >0) {
                        <input type="text" placeholder="@allInputs[input]" name="@input">
                    }
                }   
                @if(@allInputs[1] == "sendData"){
                <button onclick="sendData(@allInputs[0])" type="button">Launch</button>
                }
                @if(@allInputs[1] == "getData"){
                <button onclick="getData(@allInputs[0])" type="button">Launch</button>
                { string id = allInputs[0]; }
                <div id="graph"+@id></div>
                }
        </form>
    }
</div>
<script
src="https://www.gstatic.com/charts/loader.js">
</script>
<script>
    google.charts.load('current',{packages:['corechart']});
    var graphData = [];
    var graphId;
    var time = 0;
    var interval = 2000;
    async function sendData(id){
            var inputValuesArray = document.getElementById(id).elements;

            $(`#${id}`).addClass("pending");
            $(`#${id}`).removeClass("success error");
            let finalString = "";
            for(var index = 0; index < inputValuesArray.length-1 ;index++ ){
                if(document.getElementById(id).elements.item(index).value)
                finalString+=document.getElementById(id).elements.item(index).value +";";
            }
            let res = await fetch(`/home/execute/${id}`, {
                body: JSON.stringify({
                    execute: finalString,
                }),
                headers: {
                        'Accept': 'application/json',
                    'Content-type': 'application/json',
                },
            method:"POST",
            });
            var data = await res.json();
            $(`#${id}`).removeClass("pending");              
            if(data == "ok\r") $(`#${id}`).addClass("success");
            else {
                 $(`#${id}`).addClass("error");
            }
        }

        async function getData(id){
            if(id !== graphId) {
                graphId = id;
                graphData = [["Value", "Time"]]
            }
            var inputValuesArray = document.getElementById(id).elements;
            let finalString = "";


            for(var index = 0; index < inputValuesArray.length-1 ;index++ ){
                if(document.getElementById(id).elements.item(index).value)
                finalString+=document.getElementById(id).elements.item(index).value +";";
            }
            setInterval(async() =>{
                let res = await fetch(`/home/getString/${id}`, {
                body: JSON.stringify({
                    execute: finalString,
                }),
                headers: {
                    'Accept': 'application/json',
                        'Content-type': 'application/json',
                    },
                method:"POST",
                });
                 var data = await res.json();
                 if (data == "err"){
                     data = 50;
                     var graphItem = [data, time];
                 } else{
                     var graphItem = [data.replace("\r", ""), time];
                 }
                 console.log(graphItem);
                 time+=interval;
                 graphData.push(graphItem);
                 console.log(graphData);
                 google.charts.setOnLoadCallback(renderGraph(graphId));
            }, interval)
        }

        async function renderGraph(id){
            var e =  google.visualization.arrayToDataTable(graphData);
            var options = {
              title: '',
              hAxis: {title: 'Value'},
              vAxis: {title: 'Time'},
              legend: 'none'
            };
            var graph = new google.visualization.LineChart(document.getElementById(`graph${id}`));
            graph.draw(graphData, options);
        }
</script>

